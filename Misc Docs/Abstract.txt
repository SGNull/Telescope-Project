What do we mean by the word "computer"? Images that come to mind might include a keyboard, mouse, and display of some kind, or perhaps the box that each of those is connected to, or maybe the hardware resting inside that box. At the opposite end, one also might think of the window manager, file system, or even browsers considering how digital things have become in the recent two years. This shows just how many different facets there are to what we consider a "computer" nowadays. So, while the direct answer of "a Turing Machine" might be technically correct, it by no means captures this immense complexity wrapped inside the (usually) intuitive UX of the modern computer system. This project is an attempt to peel back those layers of complexity, and scale the ladder of abstraction from the ground up. This not only includes making hardware like a CPU and computer, but also the software that makes the hardware easier to use, like an assembly language and a self-assembler for writing code. Finally, this involves writing an operating system to manage the computer's resources, to support multiprogramming, and even support multithreading. We often take for granted just how high "high-level" actually is, and this project aims to show just that.