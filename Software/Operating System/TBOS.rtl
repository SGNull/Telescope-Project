NOTE: DESPITE THEIR APPEARANCE, RTL FILES CANNOT BE ASSEMBLED
JMP
>Init
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0
0
0
0
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of MAX_PROC_COUNT 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of PROC_CxSTATE_S 
0x0000 of BMP_WORDS 
0x0000 of BMP_WORDS 
0x0000 of BMP_WORDS 
0x0000 of BMP_WORDS 
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0x0000 of NUM_IO_DEVICES 
0
0
ALU SET RG3 RG0
ALU UST RG3 RG0
LDI FLG
>COMP_STATUS_IOP
LDI IO
>START_CODE
LDI FLG
>COUNTER_START_IOP
MOV IO RG0
LDI RG1
>OSEndPoint
LDI RG0
>CHUNK_SIZE
ALU DIV RG1 RG0
ALI ADD RG1 2
LDI RG0
>NUM_CHUNKS
DEC RG0
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>MarkBits
LDI FLG
>ROOT_DRIVE_IOP
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>LoadProgLoadable
AIN ADD OUT 1
JIF NCR
>Ini.OK
LDI RG0
>BAD_START_ERROR
JMP
>StatusEnd
MOV RG0 OUT
LDI FLG
>ROOT_PROC_FLG
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>MakeChildThread
LDI FLG
>COMP_STATUS_IOP
LDI IO
>RUN_CODE
NUL RG0
STR RG0 RG0
>CurrentProcID
JMP
>Dispatcher
LDI FLG
>COUNTER_STOP_IOP
MOV IO RG0
LDI FLG
>COMP_STATUS_IOP
MOV IO RG0
HLT
JMP
>StE.HLT
ZRO RG0
LOD RG0 RG0
>ProcCount
PAS RG0
JIF EQZ
>Dis.Done
ZRO RG0
LOD RG0 RG0
>CurrentProcID
MOV OUT RG0
ZRO RG1
LOD RG1 RG1
>MaxProcNum
INC RG1
ZRO SF1
ALU MOD OUT RG1
INC RG0
ALU MOD RG0 RG1
CMP RG0 OUT
JEQ
>Dis.Looped
LOD RG2 RG0
>SupportList
AIN SET RG2 >SUP_ACTIVE_BIT
JIF NCR
>Dis.GetNext
AIN SET RG2 >SUP_WAIT_BIT
JIF NCR
>Dis.FoundProc
AIN SET RG2 >SUP_IO_WAIT_BIT
JIF NCR
>Dis.GetNext
LOD RG3 RG0
>ProcSemNos
ICC RG3
JIF NCR
>Dis.GetNext
ZRO RG3
LOD RG3 RG3
>CurrentStatePtr
LOD FLG RG3
>FLG_OFFSET
AIN SET RG2 >SUP_IO_TYPE_BIT
JIF CAR
>Dis.IsWrite
JIF PNR
>Dis.GetNext
JMP
>Dis.VProc
JIF PNW
>Dis.GetNext
MOV SF0 RG0
LOD RG0 RG0
>ProcSemAdds
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>Verhogen
MOV RG0 SF0
STR RG0 RG0
>CurrentProcID
ALI MUL RG0 >NUM_STATE_REGS
LDI RG1
>StateList
ALU ADD RG0 RG1
STR RG0 RG0
>CurrentStatePtr
LOD EPC RG0
>EPC_OFFSET
LDI EXA
>ExHandler
LDI CTD
>CTD_VAL
LOD HLB RG0
>HLB_OFFSET
LOD FLG RG0
>FLG_OFFSET
LOD SP RG0
>SP_OFFSET
LOD RA RG0
7
LOD OUT RG0
6
LOD SF1 RG0
5
LOD SF0 RG0
4
LOD RG3 RG0
3
LOD RG2 RG0
2
LOD RG1 RG0
1
LOD RG0 RG0
0
RSM
INC SF1
CMI SF1 >MAX_DISPATCH_CYCLES
JNE
>Dis.Continue
ZRO RG0
LOD RG0 RG0
>SoftBlockCount
PAS RG0
JIF NEZ
>WaitForInt
LDI RG0
>DEADLOCK_CODE
JMP
>StatusEnd
LDI RG0
>END_CODE
JMP
>StatusEnd
STR RG0 RG0
>ExH.TempRG0
ZRO RG0
LOD RG0 RG0
>CurrentStatePtr
STR RG1 RG0
1
ZRO RG1
LOD RG1 RG1
>ExH.TempRG0
STR RG1 RG0
0
STR RG2 RG0
2
STR RG3 RG0
3
STR SF0 RG0
4
STR SF1 RG0
5
STR OUT RG0
6
STR RA RG0
7
STR SP RG0
>SP_OFFSET
STR EPC RG0
>EPC_OFFSET
STR FLG RG0
>FLG_OFFSET
ZRO SP
LDI RG0
>EXC_MASK
ALU AND RG0 FLG
ALI SRB RG0 >EXC_SHIFT
CMI RG0 >EXC_CTDZ
JEQ
>Dispatcher
CMI RG0 >EXC_SYS
JEQ
>SysHandler
CMI RG0 >EXC_PRIV
JEQ
>TerminateCurrent
CMI RG0 >EXC_OOB
JEQ
>TerminateCurrent
CMI RG0 >EXC_PAUS
JEQ
>PauseMenu
CMI RG0 >EXC_STOP
JEQ
>Shutdown
CMI RG0 >EXC_TICK
JEQ
>UnblockAllTick
CMI RG0 >EXC_PVIO
JNE
>ExH.UnknownEXC
ZRO RG0
LOD RG0 RG0
>CurrentStatePtr
LDI RG1
>PVIO_ERROR
STR RG1 RG0
>OUT_REG_NUM
JMP
>Dispatcher
LDI RG0
>UNKNOWN_EXC_ERROR
JMP
>StatusEnd
0
ZRO RG0
LOD RG0 RG0
>CurrentProcID
LOD RG0 RG0
>SupportList
AIN SET RG0 >SUP_WAIT_BIT
JIF CAR
>Dispatcher
ZRO RG0
LOD RG0 RG0
>CurrentStatePtr
LOD SP RG0
>SP_OFFSET
LOD FLG RG0
>FLG_OFFSET
LOD RA RG0
7
LOD OUT RG0
6
LOD SF1 RG0
5
LOD SF0 RG0
4
LOD RG3 RG0
3
LOD RG2 RG0
2
LOD RG1 RG0
1
LOD RG0 RG0
0
RSM
PAS RG1
JIF EQZ
>LoF.Done
STR IO RG0
0
INC RG0
DCC RG1
JIF NEZ
>LoF.LoadLoop
RET
PSH 1
STR SF0 SP
0
MOV SF0 RG0
LDI RG0
>NUM_CHUNKS
ZRO RG1
ZRO RG2
LOD RG3 RG2
>MallocBMPs
CMP RG1 RG0
JGE
>FOM.OutOfMem
MOV OUT RG1
INC RG1
AIN SRB RG1 4
JIF CAR
>FOM.SNoverflow
INC RG2
ALI UST RG2 >BMP_WORDS_2S_EXP
LOD RG3 RG2
>MallocBMPs
AFN SET RG3 OUT
JIF CAR
>FOM.OpenSearch
MOV RG0 SF0
DCC RG0
JIF EQZ
>FOM.Done
INC RG1
AIN SRB RG1 4
JIF CAR
>FOM.CNoverflow
INC RG2
ALI UST RG2 >BMP_WORDS_2S_EXP
LOD RG3 RG2
>MallocBMPs
AFN SET RG3 RG1
JIF NCR
>FOM.OpenCheck
LDI RG0
>NUM_CHUNKS
JMP
>FOM.OpenSearch
NUL OUT
LOD SF0 SP
0
POP 1
RET
ZRO RG2
LOD RG2 RG2
>MarkInst
JMP
>ModifyBits
ZRO RG2
LOD RG2 RG2
>UnmarkInst
JMP
>ModifyBits
STR RG2 RG2
>MoB.ModBit
ALU ADD RG1 RG0
MOV RG2 RG0
ALI SRB RG2 4
LOD RG3 RG2
>MallocBMPs
CMP RG0 RG1
JEQ
>MoB.Done
NOP
INC RG0
AIN SRB RG0 4
JIF CAR
>MoB.Loop
STR RG3 RG2
>MallocBMPs
INC RG2
ALI UST RG2 >BMP_WORDS_2S_EXP
LOD RG3 RG2
>MallocBMPs
JMP
>MoB.Loop
STR RG3 RG2
>MallocBMPs
RET
PSH 1
STR SF0 SP
0
MOV SF0 FLG
NUL RG1
INC RG1
LOD RG2 RG1
>ProcMainWords
AIN SET RG2 >PROC_ACTIVE_BIT
JIF CAR
>MCT.Search
ZRO RG3
ZRO RG2
ALI SET RG2 >PROC_ACTIVE_BIT
STR RG2 RG1
>ProcMainWords
STR RG3 RG1
>ProcSemAdds
STR RG3 RG1
>ProcSemNos
LOD RG2 RG3
>ProcCount
INC RG2
STR RG2 RG2
>ProcCount
LOD RG2 RG3
>MaxProcNum
CMP RG1 RG2
JLT
>MCT.Smaller
STR RG1 RG1
>MaxProcNum
LDI RG2
>INIT_SUP_WORD
STR RG2 RG1
>SupportList
MOV RG2 RG1
ALI MUL RG2 >NUM_STATE_REGS
LDI RG3
>StateList
ALU ADD RG2 RG3
ZRO RG3
STR RG3 RG2
0
STR RG3 RG2
1
STR RG3 RG2
2
STR RG3 RG2
3
STR RG3 RG2
4
STR RG3 RG2
5
STR RG3 RG2
6
STR RG3 RG2
7
STR RG3 RG2
>EPC_OFFSET
STR RG3 RG2
>SP_OFFSET
MOV RG3 SF0
STR RG3 RG2
>FLG_OFFSET
STR RG0 RG2
>HLB_OFFSET
MOV RG0 RG1
MOV OUT RG0
MOV SF0 RA
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>InsertChild
MOV RA SF0
LOD SF0 SP
0
POP 1
RET
PAS RG0
JIF EQZ
>InC.Done
LOD RG1 RG0
>ProcMainWords
LDI RG2
>SIB_MASK
ALU NOT RG2 RG2
ALU AND RG1 RG2
LDI RG2
>PARENT_MASK
ALU NOT RG2 RG2
ALU AND RG1 RG2
ZRO RG2
LOD RG2 RG2
>CurrentProcID
MOV RG3 RG2
ALI SLB RG3 >PARENT_SHIFT
ALU OR RG1 RG3
STR RG1 RG0
>ProcMainWords
LOD RG3 RG2
>ProcMainWords
LDI RG1
>CHILD_MASK
ALF AND RG1 RG3
JIF NEZ
>InC.FindLastSib
ALU OR RG3 RG0
STR RG3 RG2
>ProcMainWords
JMP
>InC.Done
LOD RG2 RG1
>ProcMainWords
LDI RG3
>SIB_MASK
ALF AND RG3 RG2
JIF EQZ
>InC.FoundLast
ALI SRB RG3 >SIB_SHIFT
MOV RG1 RG3
JMP
>InC.FindLastSib
ALI SLB RG0 >SIB_SHIFT
ALU OR RG2 RG0
STR RG2 RG1
>ProcMainWords
RET
PSH 1
STR SF0 SP
0
PAS RG0
JIF EQZ
>ReC.Done
LOD RG1 RG0
>ProcMainWords
LDI RG2
>PARENT_MASK
ALU AND RG2 RG1
ALI SRB RG2 >PARENT_SHIFT
LOD RG3 RG2
>ProcMainWords
LDI SF0
>CHILD_MASK
ALU AND SF0 RG3
CMP SF0 RG0
JNE
>ReC.IsSibling
LDI SF0
>CHILD_MASK
ALU NOT SF0 SF0
ALU AND RG3 SF0
LDI SF0
>SIB_MASK
ALU AND SF0 RG1
ALI SRB SF0 >SIB_SHIFT
ALU OR RG3 SF0
STR RG3 RG2
>ProcMainWords
JMP
>ReC.Done
LOD RG2 SF0
>ProcMainWords
LDI RG3
>SIB_MASK
ALU AND RG3 RG2
ALI SRB RG3 >SIB_SHIFT
CMP RG3 RG0
JEQ
>ReC.FoundSib
MOV SF0 RG3
JMP
>ReC.SibLoop
LDI RG3
>SIB_MASK
ALU AND RG1 RG3
ALU NOT RG3 RG3
ALU AND RG2 RG3
ALU OR RG2 RG1
STR RG2 SF0
>ProcMainWords
LOD SF0 SP
0
POP 1
RET
LDI FLG
>COMP_STATUS_IOP
LDI IO
>PAUSE_CODE
HLT
JMP
>ResumeProc
LDI FLG
>COMP_STATUS_IOP
LDI IO
>SHUTDOWN_CODE
HLT
ZRO RG0
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>Terminate
JMP
>Dispatcher
LDI RG0
>TickWaitSem
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>UnblockAll
LDI FLG
>CONFIG_IOP
ZRO IO
JMP
>ResumeProc
PSH 1
STR RA SP
0
ZRO RG1
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>RecursiveTerm
ZRO RG0
LOD RG0 RG0
>MaxProcNum
PAS RG0
JIF EQZ
>Ter.Done
LOD RG1 RG0
>SupportList
AIN SET RG1 >SUP_ACTIVE_BIT
JIF CAR
>Ter.Done
DEC RG0
JMP
>Ter.Loop
STR RG0 RG0
>MaxProcNum
LOD RA SP
0
POP 1
RET
PSH 2
STR SF0 SP
0
STR RA SP
1
MOV SF0 RG0
PAS RG1
JIF EQZ
>ReT.NotRecurse
LOD RG2 RG0
>ProcMainWords
LDI RG0
>SIB_MASK
ALF AND RG0 RG2
JIF EQZ
>ReT.Recurse
ALI SRB RG0 >SIB_SHIFT
LDI RA
>ReT.Recurse
JMP
>RecursiveTerm
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>RemoveChild
LOD RG1 SF0
>SupportList
AIN SET RG1 >SUP_WAIT_BIT
JIF NCR
>ReT.VSkip
AIN SET RG1 >SUP_OS_WAIT_BIT
JIF NCR
>ReT.NotOSSem
ZRO RG1
LOD RG1 RG1
>SoftBlockCount
DEC RG1
STR RG1 RG1
>SoftBlockCount
LOD RG1 SF0
>ProcSemAdds
LOD RG2 RG1
0
INC RG2
STR RG2 RG1
0
NUL RG0
ZRO RG2
LOD RG2 RG2
>MaxProcNum
INC RG2
INC RG0
CMP RG0 RG2
JEQ
>ReT.VSkip
LOD RG3 RG0
>ProcSemAdds
CMP RG3 RG1
JNE
>ReT.VLoop
LOD RG3 RG0
>ProcSemNos
CMP RG3 RG1
JGE
>ReT.VLoop
INC RG3
STR RG3 RG0
>ProcSemNos
JMP
>ReT.VLoop
ZRO RG1
STR RG1 SF0
>ProcSemAdds
STR RG1 SF0
>ProcSemNos
LOD RG1 SF0
>SupportList
AIN SET RG1 >SUP_IS_THREAD_BIT
JIF CAR
>ReT.SkipDealloc
MOV RG2 SF0
ALI MUL RG2 >NUM_STATE_REGS
ALI ADD RG2 >HLB_OFFSET
LOD RG2 RG2
>StateList
MOV RG1 RG2
LDI RG3
>CHUNK_SIZE
ALU DIV RG1 RG3
LDI RG0
>LO_MASK
ALU AND RG0 RG2
ALI SLB RG0 >LO_SHIFT
ALU DIV RG0 RG3
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>UnmarkBits
LOD RG2 SF0
>ProcMainWords
LDI RG3
>CHILD_MASK
ALF AND RG2 RG3
JIF EQZ
>ReT.NoChilds
MOV RG0 RG2
NUL RG1
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>RecursiveTerm
ZRO RG0
STR RG0 SF0
>ProcMainWords
ZRO RG0
LOD RG0 RG0
>ProcCount
DEC RG0
STR RG0 RG0
>ProcCount
ZRO RG0
STR RG0 SF0
>SupportList
LOD SF0 SP
0
LOD RA SP
1
POP 2
RET
LOD RG2 RG0
0
DEC RG2
STR RG2 RG0
0
PAS RG2
JIF GEZ
>Pas.Skip
STR RG0 RG1
>ProcSemAdds
STR RG2 RG1
>ProcSemNos
LOD RG3 RG1
>SupportList
ALI SET RG3 >SUP_WAIT_BIT
LDI RG2
>SEM_START
CMP RG0 RG2
JLT
>Pas.NotOSSem
LDI RG2
>SEM_END
CMP RG0 RG2
JGE
>Pas.NotOSSem
ZRO RG2
LOD RG2 RG2
>SoftBlockCount
INC RG2
STR RG2 RG2
>SoftBlockCount
ALI SET RG3 >SUP_OS_WAIT_BIT
STR RG3 RG1
>SupportList
LDI OUT
1
JMP
>Pas.Done
ZRO OUT
RET
LOD RG1 RG0
0
INC RG1
STR RG1 RG0
0
NUL RG1
ZRO RG2
LOD RG2 RG2
>MaxProcNum
INC RG2
INC RG1
CMP RG1 RG2
JEQ
>Ver.Done
LOD RG3 RG1
>ProcSemAdds
CMP RG3 RG0
JNE
>Ver.Loop
LOD RG3 RG1
>ProcSemNos
INC RG3
STR RG3 RG1
>ProcSemNos
PAS RG3
JIF NEZ
>Ver.Loop
STR RG3 RG1
>ProcSemAdds
LOD RG3 RG1
>SupportList
ALI UST RG3 >SUP_WAIT_BIT
ALI UST RG3 >SUP_IO_WAIT_BIT
AIN SET RG3 >SUP_OS_WAIT_BIT
JIF NCR
>Ver.NotInOS
ZRO OUT
LOD OUT OUT
>SoftBlockCount
DEC OUT
STR OUT OUT
>SoftBlockCount
ALI UST RG3 >SUP_OS_WAIT_BIT
STR RG3 RG1
>SupportList
JMP
>Ver.Loop
RET
NUL RG1
ZRO RG2
INC RG1
LDI RG3
>MAX_PROC_COUNT
CMP RG1 RG3
JEQ
>UnA.Done
LOD RG3 RG1
>ProcSemAdds
CMP RG3 RG0
JNE
>UnA.Loop
LOD OUT RG1
>SupportList
ALI UST OUT >SUP_WAIT_BIT
ALI UST OUT >SUP_IO_WAIT_BIT
AIN SET OUT >SUP_OS_WAIT_BIT
JIF NCR
>UnA.NotOS
ZRO RG3
LOD RG3 RG3
>SoftBlockCount
DEC RG3
STR RG3 RG3
>SoftBlockCount
ALI UST OUT >SUP_OS_WAIT_BIT
STR OUT RG1
>SupportList
ZRO RG3
STR RG3 RG1
>ProcSemAdds
STR RG3 RG1
>ProcSemNos
INC RG2
JMP
>UnA.Loop
LOD RG1 RG0
0
ALU ADD RG1 RG2
STR RG1 RG0
0
RET
PSH 3
STR RA SP
0
ALI MUL RG0 >TSFS_ENTRY_SIZE
ZRO RG1
ALI SET FLG >DRIVE_PTR_BIT
MOV IO RG1
ALI UST FLG >DRIVE_PTR_BIT
MOV RG1 IO
CMP RG0 RG1
JGE
>LPT.FileError
ALI SET FLG >DRIVE_PTR_BIT
MOV IO RG0
ALI UST FLG >DRIVE_PTR_BIT
MOV RG0 IO
PAS IO
JIF EQZ
>LPT.FileError
STR RG0 SP
1
JMP
>LPL.LPTSkip
ZRO OUT
POP 3
RET
PSH 3
STR RA SP
0
ZRO RG0
STR RG0 SP
1
STR SF0 SP
2
ALI SET FLG >DRIVE_PTR_BIT
MOV IO RG0
ALI UST FLG >DRIVE_PTR_BIT
MOV RG0 IO
LDI RG1
>CHUNK_SIZE
ALU DIV RG0 RG1
ALI ADD RG0 2
MOV SF0 RG0
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>FindOpenMemory
AIN ADD OUT 1
JIF CAR
>LPL.Error
MOV RG1 SF0
MOV RG0 OUT
MOV SF0 RG0
LDI RG2
>CHUNK_SIZE
ALU MUL OUT RG2
ALI SRB OUT >LO_SHIFT
MOV RG3 RG1
ALU MUL RG3 RG2
ALU OR OUT RG3
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>MarkBits
LOD RG1 SP
1
LDI RG2
>CHUNK_SIZE
ALU MUL SF0 RG2
MOV RG0 SF0
ALI SET FLG >DRIVE_PTR_BIT
MOV IO RG1
ALI UST FLG >DRIVE_PTR_BIT
MOV RG1 IO
LOD RA SP
0
LOD SF0 SP
2
POP 3
JMP
>LoadFile
NUL OUT
LOD RA SP
0
LOD SF0 SP
2
POP 3
RET
ZRO RG0
LOD RG0 RG0
>CurrentStatePtr
LOD RG0 RG0
>FLG_OFFSET
AIN SET RG0 >UE_PU_SHIFT
JIF NCR
>CIA.IsKernel
LDI RG1
>IOP_DEVICE_MASK
AFN AND RG0 RG1
JIF EQZ
>SRH.UserPriv
ALI SRB RG0 >IOP_SHIFT
LDI RG1
>MAX_UNPROT_IOP_NUM
CMP RG1 RG0
JLT
>SRH.UserPriv
JMP
>CIA.Done
ALI SRB RG0 >IOP_SHIFT
MOV OUT RG0
RET
ZRO RG2
LOD RG2 RG2
>CurrentStatePtr
LOD RG3 RG2
>FLG_OFFSET
LOD RG2 RG2
>HLB_OFFSET
AIN SET RG3 >UE_PU_SHIFT
JIF NCR
>CPA.IsKernel
MOV RG3 RG2
LDI RG1
>HI_MASK
ALU AND RG3 RG1
MOV RG1 RG0
ALI SRB RG1 1
ALI SRB RG3 1
CMP RG1 RG3
JGE
>SRH.UserOOB
ALI SLB RG2 >LO_SHIFT
ALU ADD RG2 RG0
MOV OUT RG2
JMP
>CPA.Done
ALI SLB RG2 >LO_SHIFT
ALU ADD RG2 RG0
MOV OUT RG2
ALI SRB RG2 1
LDI RG3
>OSEndPoint
INC RG3
ALI SRB RG3 1
CMP RG2 RG1
JLT
>SRH.OSMod
RET
ZRO RG0
LOD RG0 RG0
>CurrentProcID
LDI RA
>Dispatcher
JMP
>Terminate
LDI RG0
>SYS_SUCCESSFUL
ZRO RG1
LOD RG1 RG1
>CurrentStatePtr
STR RG0 RG1
>OUT_REG_NUM
JMP
>ResumeProc
LDI RG0
>SYS_SUCCESSFUL
JMP
>SRH.FinSkip
LDI RG0
>SYS_MAX_PROCS
JMP
>SRH.FinSkip
LDI RG0
>SYS_OUT_OF_MEM
JMP
>SRH.FinSkip
LDI RG0
>SYS_MISSING_FILE
JMP
>SRH.FinSkip
LDI RG0
>SYS_BAD_IOP
JMP
>SRH.FinSkip
LDI RG0
>SYS_ATTEMPTED_OOB
JMP
>SRH.FinSkip
LDI RG0
>SYS_ATTEMPTED_PRIV
JMP
>SRH.FinSkip
LDI RG0
>SYS_ATTEMPTED_OS
JMP
>SRH.FinSkip
ZRO RG1
LOD RG1 RG1
>CurrentStatePtr
STR RG0 RG1
>OUT_REG_NUM
JMP
>Dispatcher
MOV RG0 CTD
MOV RG1 FLG
ALI AND RG1 >UE_STACK_MASK
MOV RG2 EPC
LDI EXA
>WFI.Done
LDI CTD
>WAIT_TIME
ALI SET FLG >UE_CE_BIT
JMP
>WFI.Wait
ALU OR FLG RG1
MOV EPC RG2
LDI EXA
>ExHandler
PAS CTD
JIF EQZ
>Dispatcher
MOV CTD RG0
JMP
>ExH.Skip
ZRO SF0
LOD SF0 SF0
>CurrentStatePtr
LOD RG0 SF0
1
LOD RG1 SF0
2
LOD RG2 SF0
3
LOD RG3 SF0
0
CMI RG3 >SYSCODE_GIVE_UP_TURN
JEQ
>Dispatcher
CMI RG3 >SYSCODE_LOAD_PROGRAM
JEQ
>SysLoadProg
CMI RG3 >SYSCODE_MAKE_THREAD
JEQ
>SysSpawnThread
CMI RG3 >SYSCODE_TERMINATE
JEQ
>TerminateCurrent
CMI RG3 >SYSCODE_VERHOGEN
JEQ
>SysVerhogen
CMI RG3 >SYSCODE_PASSEREN
JEQ
>SysPasseren
CMI RG3 >SYSCODE_IO_MUTEX
JEQ
>SysIOMutex
CMI RG3 >SYSCODE_IO_RELEASE
JEQ
>SysIORelease
CMI RG3 >SYSCODE_WAIT_TICK
JEQ
>SysWaitTick
CMI RG3 >SYSCODE_IO_WAIT_READ
JEQ
>SysWaitRead
CMI RG3 >SYSCODE_IO_WAIT_WRITE
JEQ
>SysWaitWrite
LDI RG0
>UNKNOWN_SYSCODE_ERROR
STR RG0 SF0
6
JMP
>ResumeProc
PSH 3
STR RG0 SP
0
STR RG1 SP
1
STR RG2 SP
2
ZRO RG3
LOD RG3 RG3
>ProcCount
LDI SF0
>MAX_PROC_COUNT
CMP RG3 SF0
JEQ
>SRH.MaxProcs
ZRO RG3
LOD RG3 RG3
>CurrentStatePtr
LOD RG3 RG3
>FLG_OFFSET
AIN SET RG3 >UE_PU_SHIFT
JIF NCR
>SST.Kernel
PAS RG2
JIF NEZ
>SRH.UserPriv
MOV SF0 RG0
MOV SF1 RG1
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>CheckCurProcAddress
MOV RG0 SF1
MOV RG1 SF0
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>CheckCurProcAddress
LOD RG2 SP
2
PAS RG2
JIF EQZ
>SST.SpawnU
LDI FLG
>KERNEL_PROC_FLG
JMP
>SST.Skip
LDI FLG
>USER_PROC_FLG
ZRO RG0
LOD RG0 RG0
>CurrentStatePtr
LOD RG0 RG0
>HLB_OFFSET
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>MakeChildThread
LDI RG0
>NUM_STATE_REGS
ALU MUL RG0 OUT
LDI RG1
>StateList
ALU ADD RG0 RG1
LOD RG1 SP
0
STR RG1 RG0
>EPC_OFFSET
LOD RG1 SP
1
STR RG1 RG0
>SP_OFFSET
LOD RG1 OUT
>SupportList
ALI SET RG1 >SUP_IS_THREAD_BIT
STR RG1 OUT
>SupportList
JMP
>SRH.Success
MOV SF0 RG1
ZRO RG1
LOD RG1 RG1
>ProcCount
LDI RG2
>MAX_PROC_COUNT
CMP RG1 RG2
JGE
>SRH.MaxProcs
ZRO RG1
LOD RG1 RG1
>CurrentStatePtr
LOD RG2 RG1
>FLG_OFFSET
AIN SET RG2 >UE_PU_SHIFT
JIF CAR
>SRH.UserPriv
LDI RG1
>IOP_GROUP_MASK
ALU AND RG1 RG2
ALI SRB RG1 >IOP_GROUP_SHIFT
CMI RG1 >DRIVE_IOP_GROUP
JNE
>SRH.IOPError
MOV FLG RG2
LDI RA
>SLP.Ret
AIN ADD RG0 1
JIF EQZ
>LoadProgLoadable
JMP
>LoadProgramTSFS
AIN ADD OUT 1
JIF CAR
>SRH.OutOfMem
PAS OUT
JIF EQZ
>SRH.MissingFile
MOV RG0 SF0
PAS RG0
JIF EQZ
>SLP.ChildUser
LDI FLG
>KERNEL_PROC_FLG
JMP
>SLP.ChildUSkip
LDI FLG
>USER_PROC_FLG
MOV RG0 OUT
LDI RA
>SRH.Success
JMP
>MakeChildThread
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>CheckCurProcAddress
MOV RG0 OUT
ZRO RG1
LOD RG1 RG1
>CurrentProcID
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>Passeren
PAS OUT
JIF EQZ
>SRH.Success
JMP
>SRH.SuccessSkip
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>CheckCurProcAddress
MOV RG0 OUT
LDI RA
>SRH.Success
JMP
>Verhogen
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>CheckIOPAccess
MOV RG0 OUT
LDI RG1
>IOMutexSems
ALU ADD RG0 RG1
ZRO RG1
LOD RG1 RG1
>CurrentProcID
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>Passeren
PAS OUT
JIF EQZ
>SRH.Success
JMP
>SRH.SuccessSkip
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>CheckIOPAccess
MOV RG0 OUT
LDI RG1
>IOMutexSems
ALU ADD RG0 RG1
LDI RA
>SRH.Success
JMP
>Verhogen
LDI RG0
>TickWaitSem
ZRO RG1
LOD RG1 RG1
>CurrentProcID
LDI RA
>SRH.SuccessSkip
JMP
>Passeren
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>CheckIOPAccess
JIF PRD
>SRH.Success
ZRO RG0
LOD RG0 RG0
>CurrentProcID
LOD RG1 RG0
>SupportList
ALI SET RG1 >SUP_IO_WAIT_BIT
ALI UST RG1 >SUP_IO_TYPE_BIT
STR RG1 RG0
>SupportList
MOV RG1 RG0
LDI RG0
>IOReadSems
ALU ADD RG0 OUT
LDI RA
>SRH.SuccessSkip
JMP
>Passeren
CAL (MOV RA PC)
|   (ALI ADD RA 4)
|   (JMP)
>CheckIOPAccess
JIF PWT
>SRH.Success
ZRO RG0
LOD RG0 RG0
>CurrentProcID
LOD RG1 RG0
>SupportList
ALI SET RG1 >SUP_IO_WAIT_BIT
ALI SET RG1 >SUP_IO_TYPE_BIT
STR RG1 RG0
>SupportList
MOV RG1 RG0
LDI RG0
>IOWriteSems
ALU ADD RG0 OUT
LDI RA
>SRH.SuccessSkip
JMP
>Passeren
