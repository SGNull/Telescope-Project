NOTE: DESPITE THEIR APPEARANCE, RTL FILES CANNOT BE ASSEMBLED
JIF TRU
>StartPoint
0xd188
0x0000
0b0000
0xb672
0x1000
0b0000
0xcf33
0x2000
0b0000
0xd9ed
0x3000
0b0011
0x992a
0x4000
0b0100
0xa48c
0x5000
0b0010
0x91ec
0x6000
0b0011
0xca93
0x7000
0b0011
0x9981
0x8000
0b0111
0x9921
0x9000
0b1111
0xd581
0xA000
0b0111
0xa581
0xB000
0b1111
0xb8c1
0xC000
0b0111
0xb921
0xD000
0b1111
0xc1ee
0xFFFF
0b0000
>TABLESTOP
0x40F2
0x0
0x44F2
0x1
0x48F2
0x2
0x4CF2
0x3
0x50F2
0x4
0x54F2
0x5
0x58F2
0x6
0xD2AF
0x6
0x5CF2
0x7
0x0032
0x7
0x0070
0x8
0x01E9
0x9
0x9D86
0xA
0x0213
0xB
0x8988
0xC
0x9283
0xD
0x8E05
0xE
0x8705
0xF
>TABLESTOP
0xD1EE
0x0
0x91C1
0x1
0x024F
0x2
0xC9F8
0x3
0x8993
0x4
0x8A53
0x5
0xB0B3
0x6
0x8DC5
0x7
0x9CAE
0x8
0x9081
0x9
0x8C81
0xA
0x8AB3
0xB
0x8853
0xC
0xB2AD
0xD
0xD924
0xE
0x91ED
0xF
0xEA25
0x0
0xEA8c
0x1
0xC823
0x2
0xCACF
0x3
0x9250
0x4
0xD2F0
0x5
0xD654
0x6
0x91D2
0x7
0xE8AE
0x8
0xE8A7
0x9
0xC86E
0xA
0xD9EE
0xB
0xC9D0
0xC
0xDDD0
0xD
>TABLESTOP
' '
';'
'\n'
'\t'
','
'='
':'
'['
']'
'('
')'
>TABLESTOP
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0x0000
0
0
LDI FLG
>INFLG
MOV OUT IO
MOV PC RA
LDI FLG
>INFLG
LDI IO
0
MOV PC RA
LDI FLG
>OUTFLG
MOV IO RG0
MOV PC RA
LDI FLG
>INFLG
LDI IO
0
LDI SP
0
STR SP SP
>LblTblIdx
JIF TRU
>BuildTables
ALI AND RG2 0
LOD RG2 RG2
>BuffIdx
ALI AND OUT 0
AFN SUB RG1 RG2
JIF EQZ
>GVB.Done
LOD RG3 RG1
>Buffer
AIN SEL RG3 6
JIF EQZ
>GVB.Num
ALI ADD RG3 9
ALI AND RG3 0xF
ALU MUL OUT RG0
ALU ADD OUT RG3
ALI ADD RG1 1
AFN SUB RG1 RG2
JIF NEZ
>GVB.FLoop
MOV PC RA
ALI AND RG0 0
LOD RG0 RG0
>BuffIdx
AIN SUB RG0 1
JIF NEZ
>GNV.0
ALI AND OUT 0
LOD OUT OUT
>Buffer
ALI AND OUT 0xF
MOV PC RA
LDI RG0
1
LOD RG0 RG0
>Buffer
AIN SEL RG0 6
JIF NEZ
>GNV.Char
LDI RG0
10
ALI AND RG1 0
JIF TRU
>GetValueBase
LDI RG1
>HEX
AFN SUB RG0 RG1
JIF NEZ
>GNV.NH
LDI RG0
16
LDI RG1
2
JIF TRU
>GetValueBase
LDI RG1
>BIN
AFN SUB RG0 RG1
JIF NEZ
>GNV.Bad
LDI RG0
2
LDI RG1
2
JIF TRU
>GetValueBase
HLT
0xFFF0
JIF TRU
>StartPoint
ALI AND RG0 0
ALI AND RG1 0
LOD RG1 RG1
>LblTblIdx
AFN SUB RG0 RG1
JIF LTZ
>LL.OK
HLT
0xFFF1
JIF TRU
>StartPoint
LOD RG2 RG0
>LabelTable
AFN SUB RG3 RG2
JIF NEZ
>LL.NotMatch
LDI RG4
1
AFN SUB RG4 RG2
JIF NEZ
>LL.DoLoop
ALU ADD RG0 RG2
LOD OUT RG0
>LabelTable
JIF TRU
>LL.Done
MOV RG5 RG0
ALU ADD RG5 RG4
LOD RG5 RG5
>LabelTable
LOD OUT RG4
>Buffer
AFN SUB RG5 OUT
JIF NEZ
>LL.NotMatch
ALI ADD RG4 1
JIF TRU
>LL.EntryLoop
ALU ADD RG0 RG2
ALI ADD RG0 1
JIF TRU
>LL.TableLoop
MOV PC RA
ALI AND RG3 0
LDI RG5
>TABLESTOP
STR RG3 RG3
>TIL.SMC
LOD RG4 RG1
0
AFN SUB RG4 RG0
JIF NEZ
>TIL.Skp1
MOV OUT RG3
MOV PC RA
AFN SUB RG4 RG5
JIF NEZ
>TIL.Skp2
MOV OUT RG5
MOV PC RA
ALU ADD RG3 RG2
JIF TRU
>TIL.Loop
LDI RG6
>STOP
MOV RG5 IO
AFN SUB RG5 RG0
JIF EQZ
>GC.Done
AFN SUB RG5 RG6
JIF NEZ
>GC.Loop
MOV PC RA
ALI SUB SP 1
STR RA SP
0
LDI FLG
>INFLG
LDI RG2
1
MOV RG0 IO
LDI RA
>GN.Loop1
LDI RG1
>COMMAND
AFN SUB RG0 RG1
JIF EQZ
>GotoChar
LDI RG1
>COMMENT
AFN SUB RG0 RG1
JIF NEZ
>GN.NotCom
LDI RG0
>NEWLINE
JIF TRU
>GotoChar
LDI RG1
>SkipChars
LDI RA
>GN.Ret1
JIF TRU
>TblIdxLookup
AIN ADD OUT 1
JIF NCR
>GN.Loop1
LDI RG1
>STOP
AFN SUB RG0 RG1
JIF NEZ
>GN.Skip1
STR RG0 RG0
>Buffer
LDI RG4
1
JIF TRU
>GN.Done
ALI AND RG4 0
LDI RG1
>CHAR
AFN SUB RG0 RG1
JIF NEZ
>GN.Skip2
STR RG0 RG4
>Buffer
MOV RG0 IO
ALI ADD RG4 1
STR RG0 RG4
>Buffer
MOV RG0 IO
ALI ADD RG4 1
STR RG0 RG4
>Buffer
JIF TRU
>GN.Done
LDI RA
>GN.LLRet
LDI RG1
>SkipChars
STR RG0 RG4
>Buffer
ALI ADD RG4 1
MOV RG0 IO
LDI RG2
>COMMAND
AFN SUB RG0 RG2
JIF NEZ
>GN.LL1
LDI RA
>GN.Loop2D
JIF TRU
>GotoChar
LDI RG2
>COMMENT
AFN SUB RG0 RG2
JIF NEZ
>GN.LL2
LDI RG0
>NEWLINE
LDI RA
>GN.Loop2D
JIF TRU
>GotoChar
LDI RG2
>STOP
AFN SUB RG0 RG2
JIF EQZ
>GN.Loop2D
ALI SUB SP 1
STR RG4 SP
0
JIF TRU
>TblIdxLookup
LOD RG4 SP
0
ALI ADD SP 1
AIN ADD OUT 1
JIF CAR
>GN.Loop2
STR RG4 RG4
>BuffIdx
LOD RA SP
0
ALI ADD SP 1
MOV PC RA
ALI AND RG1 0
LOD RG1 RG1
>LblTblIdx
LDI RG2
1
ALI AND RG0 0
LOD RG0 RG0
>BuffIdx
STR RG0 RG1
>LabelTable
ALI ADD RG1 1
LOD RG3 RG2
>Buffer
STR RG3 RG1
>LabelTable
ALI ADD RG1 1
ALI ADD RG2 1
AFN SUB RG2 RG0
JIF NEZ
>ASL.FLoop
STR RG1 RG1
>LblTblIdx
MOV PC RA
LDI RG1
0x1F
ALI AND OUT 0
LDI RG0
2
LOD RG0 RG0
>Buffer
MOV OUT RG0
ALU AND OUT RG1
ALI SLB OUT 10
ALI SEL RG0 5
ALI SLB RG0 15
ALU OR OUT RG0
LDI RG0
1
LOD RG0 RG0
>Buffer
ALU AND RG0 RG1
ALI SLB RG0 5
ALU OR OUT RG0
ALI AND RG0 0
LOD RG0 RG0
>Buffer
ALU AND RG0 RG1
ALU OR OUT RG0
MOV PC RA
ALI SUB SP 2
STR RG0 SP
0
STR RA SP
1
LDI RA
>AN.Ret0
JIF TRU
>GetNext
ALI AND RG1 0
LOD RG1 RG1
>BuffIdx
AIN SUB RG1 2
JIF NEZ
>AN.Skip0
ALI AND RG2 0
STR RG2 RG1
>Buffer
ALI ADD RG1 1
STR RG1 RG1
>BuffIdx
LDI RA
>AN.Ret1
JIF TRU
>HashBuff
MOV RG0 OUT
LOD RG1 SP
0
LDI RG2
2
LDI RA
>AN.Ret2
JIF TRU
>TblIdxLookup
AIN ADD OUT 1
JIF NCR
>AN.OpOK
HLT
0xFFF4
JIF TRU
>StartPoint
ALI ADD OUT 1
LOD RG0 SP
0
ALU ADD OUT RG0
LOD OUT OUT
0
LOD RA SP
1
ALI ADD SP 2
MOV PC RA
ALI AND RG0 0
ALI SUB SP 1
STR RG0 SP
0
LDI RA
>BT.Ret0
JIF TRU
>GetNext
ALI AND RG0 0
LOD RG0 RG0
>Buffer
LDI RG1
>STOP
AFN SUB RG0 RG1
JIF EQZ
>BT.Done
LDI RG1
>LABEL
AFN SUB RG0 RG1
JIF NEZ
>BT.NotLbl
LDI RA
>BT.Ret1
JIF TRU
>ApdStrLbl
LOD RG0 SP
0
ALI AND RG1 0
LOD RG1 RG1
>LblTblIdx
STR RG0 RG1
>LabelTable
ALI ADD RG1 1
STR RG1 RG1
>LblTblIdx
JIF TRU
>BT.Loop
LDI RG1
>CONST
AFN SUB RG0 RG1
JIF NEZ
>BT.NotConst
LDI RA
>BT.Ret2
JIF TRU
>ApdStrLbl
LDI RA
>BT.Ret3
JIF TRU
>GetNext
ALI AND RG0 0
LOD RG0 RG0
>Buffer
LDI RG1
>CHAR
AFN SUB RG0 RG1
JIF NEZ
>BT.CnNum
LDI OUT
1
LOD OUT OUT
>Buffer
JIF TRU
>BT.CnDone
LDI RA
>BT.CnDone
JIF TRU
>GetNumericValue
ALI AND RG0 0
LOD RG0 RG0
>LblTblIdx
STR OUT RG0
>LabelTable
ALI ADD RG0 1
STR RG0 RG0
>LblTblIdx
JIF TRU
>BT.Loop
LDI RG1
>CHAR
AFN SUB RG0 RG1
JIF NEZ
>BT.NotChar
LOD RG0 SP
0
ALI ADD RG0 1
STR RG0 SP
0
JIF TRU
>BT.Loop
LDI RG1
>ARRAY
AFN SUB RG0 RG1
JIF NEZ
>BT.NotArr
LDI RG0
10
LDI RG1
1
LDI RA
>BT.Ret5
JIF TRU
>GetValueBase
LOD RG0 SP
0
ALU ADD RG0 OUT
STR RG0 SP
0
JIF TRU
>BT.Loop
AIN SEL RG0 6
JIF NEZ
>BT.NotNum
LOD RG0 SP
0
ALI ADD RG0 1
STR RG0 SP
0
JIF TRU
>BT.Loop
LOD RG0 SP
0
ALI ADD RG0 1
STR RG0 SP
0
LDI RA
>BT.Ret6
JIF TRU
>HashBuff
MOV RG0 OUT
LDI RG1
>InstTable
LDI RG2
3
LDI RA
>BT.Ret7
JIF TRU
>TblIdxLookup
AIN ADD OUT 1
JIF NCR
>BT.InOK
HLT
0xFFF3
JIF TRU
>StartPoint
ALI ADD OUT 2
LOD RG0 OUT
>InstTable
AIN SEL RG0 2
JIF EQZ
>BT.NoMod
MOV RG1 IO
AIN SEL RG0 1
JIF EQZ
>BT.NoOp0
MOV RG1 IO
AIN SEL RG0 0
JIF EQZ
>BT.NoOp1
MOV RG1 IO
JIF TRU
>BT.Loop
LDI IO
0
ALI ADD SP 1
JIF TRU
>Assemble
LDI RA
>ASM.Ret0
JIF TRU
>GetNext
ALI AND RG0 0
LOD RG0 RG0
>Buffer
LDI RG1
>LABEL
AFN SUB RG0 RG1
JIF EQZ
>Assemble
LDI RG1
>STOP
AFN SUB RG0 RG1
JIF EQZ
>StopPoint
LDI RG1
>REF
AFN SUB RG0 RG1
JIF NEZ
>ASM.NotRef
LDI RA
>ASM.RetRef
JIF TRU
>LabelLookup
LDI FLG
>OUTFLG
MOV IO OUT
LDI FLG
>INFLG
JIF TRU
>Assemble
LDI RG1
>CONST
AFN SUB RG0 RG1
JIF NEZ
>ASM.NotConst
LDI RA
>Assemble
JIF TRU
>GetNext
LDI RG1
>CHAR
AFN SUB RG0 RG1
JIF NEZ
>ASM.NotChar
LDI RG0
1
LOD RG0 RG0
>Buffer
LDI FLG
>OUTFLG
MOV IO RG0
LDI FLG
>INFLG
JIF TRU
>Assemble
LDI RG1
>ARRAY
AFN SUB RG0 RG1
JIF NEZ
>ASM.NotArr
LDI RG0
10
LDI RG1
1
LDI RA
>ASM.RetArray
JIF TRU
>GetValueBase
AIF OR OUT 0
JIF EQZ
>Assemble
LDI FLG
>OUTFLG
ALI AND RG0 0
MOV IO RG0
ALI SUB OUT 1
AIF OR OUT 0
JIF NEZ
>ASM.ArrLoop
LDI FLG
>INFLG
JIF TRU
>Assemble
AIN SEL RG0 6
JIF NEZ
>ASM.NotNum
LDI RA
>ASM.RetNum
JIF TRU
>GetNumericValue
LDI FLG
>OUTFLG
MOV IO OUT
LDI FLG
>INFLG
JIF TRU
>Assemble
LDI RA
>ASM.Ret1
JIF TRU
>HashBuff
MOV RG0 OUT
LDI RG1
>InstTable
LDI RG2
3
LDI RA
>ASM.Ret2
JIF TRU
>TblIdxLookup
ALI ADD OUT 1
LOD RG0 OUT
>InstTable
ALI ADD OUT 1
LOD RG1 OUT
>InstTable
ALI SUB SP 2
STR RG0 SP
0
STR RG1 SP
1
AIN SEL RG1 2
JIF EQZ
>ASM.NoMod
LDI RG0
>ModTable
LDI RA
>ASM.RetMod
JIF TRU
>AssembleNext
LOD RG0 SP
0
ALI SLB OUT 8
ALU OR RG0 OUT
STR RG0 SP
0
LOD RG1 SP
1
AIN SEL RG1 1
JIF EQZ
>ASM.NoOp0
LDI RG0
>RegTable
LDI RA
>ASM.RetOp0
JIF TRU
>AssembleNext
LOD RG0 SP
0
ALI SLB OUT 4
ALU OR RG0 OUT
STR RG0 SP
0
LOD RG1 SP
1
AIN SEL RG1 0
JIF EQZ
>ASM.NoOp1
AIN SEL RG1 3
JIF EQZ
>ASM.NotImm
LDI RA
>ASM.Op1R0
JIF TRU
>GetNext
LDI RA
>ASM.Op1Done
JIF TRU
>GetNumericValue
LDI RG0
>RegTable
LDI RA
>ASM.Op1Done
JIF TRU
>AssembleNext
ALI AND OUT 0xF
LOD RG0 SP
0
ALU OR RG0 OUT
LDI FLG
>OUTFLG
MOV IO RG0
LDI FLG
>INFLG
JIF TRU
>Assemble
ALI OR SP 0
JIF EQZ
>StPt.OK
HLT
0xFFF2
JIF TRU
>StartPoint
HLT
0x0001
JIF TRU
>StartPoint
