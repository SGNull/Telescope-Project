JMP
>Init
@WORD_SIZE 16
@STATE_REG_COUNT 12
@DRIVE_IOP_GROUP 0
@DRIVE_PTR_IOP_GROUP 1
@IOP_GROUP_MASK 0xE000
@IOP_GROUP_SHIFT 13
@DRIVE_PTR_BIT 13
@HI_SHIFT 8
@LO_SHIFT >HI_SHIFT
@LO_MASK 0x00FF
@EXC_MASK 0x0700
@EXC_SHIFT 8
@EXC_CTDZ 4
@EXC_SYS 5
@EXC_PRIV 6
@EXC_OOB 7
@PC_STATUS_IOP 0xF000
@RANDOM_IOP >PC_STATUS_IOP
@COUNTER_START_IOP 0xE000
@COUNTER_STOP_IOP 0xE800
@ADDR_BEFORE_BOOT 0xFEFF
@ENDLOAD 0xF33D
@USER_PROC_FLG 0x000C
@ROOT_PROC_FLG >USER_PROC_FLG
@ROOT_DRIVE_IOP 0x0000
@MAX_PROC_COUNT 16
@PROC_WORDS 1
#ProcList
~16
@PROC_ACTIVE_BIT 15
@PARENT_MASK 0xF00
@PARENT_SHIFT 8
@SIB_MASK 0xF0
@SIB_SHIFT 4
@CHILD_MASK 0xF
@ROOT_PROC_ID 0
@NULL_PROC_ID >ROOT_PROC_ID
#ProcCount
0
#CurrentProcID
0
@CTD_VAL 0x0800
#StateList
~192
@FLG_OFFSET 8
@SP_OFFSET 9
@EPC_OFFSET 10
@HLB_OFFSET 11
@CHUNK_SIZE 0x0400
@NUM_CHUNKS 64
@BMP_WORDS 4
#MallocBMPs
~4
#TState
~10
#MarkInst
ALU SET RG5 RG4
#UnmarkInst
ALU UST RG5 RG4
@START_CODE 1
@RUN_CODE 2
@END_CODE 0x600D
@BAD_START_ERROR 0xFF00
@UNKNOWN_EXC_ERROR 0xFF01
@SYS_SPAWN_PROG_GOOD 0x00A1
@SYS_SPAWN_PROG_MEM 0xF000
@SYS_SPAWN_PROG_MAX 0xF001
@SYS_SPAWN_PROG_PRIV 0xF002
@SYS_SPAWN_PROG_FLG 0xF003
#Init
LDI RG0
>START_CODE
LDI FLG
>PC_STATUS_IOP
MOV IO RG0
LDI FLG
>COUNTER_START_IOP
MOV IO RG0
ZRO RG0
LDI RG1
>ADDR_BEFORE_BOOT
LDI RG2
>ENDLOAD
#Ini.CleanLoop
INC RG1
LOD RG3 RG1
0
STR RG0 RG1
0
CMP RG3 RG2
JNE
>Ini.CleanLoop
LDI RG1
>OSEndPoint
LDI RG0
>CHUNK_SIZE
ALU DIV RG1 RG0
ALI ADD RG1 2
LDI RG0
>NUM_CHUNKS
ALI SUB RG0 1
CAL
>MarkBits
LDI FLG
>ROOT_DRIVE_IOP
CAL
>LoadProgram
AIN ADD OUT 1
JIF NCR
>Ini.OK
LDI RG0
>BAD_START_ERROR
JMP
>StatusHalt
#Ini.OK
MOV RG0 OUT
LDI FLG
>ROOT_PROC_FLG
CAL
>MakeChildThread
LDI RG0
>RUN_CODE
LDI FLG
>PC_STATUS_IOP
MOV IO RG0
NUL RG0
STR RG0 RG0
>CurrentProcID
JMP
>Dispatcher
#StatusHalt
LDI FLG
>PC_STATUS_IOP
MOV IO RG0
HLT
#Dispatcher
ZRO RG0
LOD RG0 RG0
>ProcCount
PAS RG0
JIF EQZ
>Dis.Done
ZRO RG0
LOD RG0 RG0
>CurrentProcID
#Dis.GetNext
INC RG0
LDI RG1
>MAX_PROC_COUNT
ALU MOD RG0 RG1
MOV RG1 RG0
LDI RG2
>PROC_WORDS
ALU MUL RG1 RG2
LOD RG1 RG1
>ProcList
AIN SET RG1 >PROC_ACTIVE_BIT
JIF NCR
>Dis.GetNext
STR RG0 RG0
>CurrentProcID
ALI MUL RG0 >STATE_REG_COUNT
LDI RG1
>StateList
ALU ADD RG0 RG1
LOD EPC RG0
>EPC_OFFSET
LDI EXA
>ExHandler
LDI CTD
>CTD_VAL
LOD HLB RG0
>HLB_OFFSET
LOD FLG RG0
>FLG_OFFSET
LOD SP RG0
>SP_OFFSET
LOD RG7 RG0
7
LOD RG6 RG0
6
LOD RG5 RG0
5
LOD RG4 RG0
4
LOD RG3 RG0
3
LOD RG2 RG0
2
LOD RG1 RG0
1
LOD RG0 RG0
0
RSM
#Dis.Done
LDI RG0
>END_CODE
JMP
>StatusHalt
#BurstOver
ZRO RG0
LOD RG0 RG0
>CurrentProcID
ALI MUL RG0 >STATE_REG_COUNT
LDI RG1
>StateList
ALU ADD RG0 RG1
LDI RG1
>TState
LOD RG2 RG1
0
STR RG2 RG0
0
LOD RG2 RG1
1
STR RG2 RG0
1
LOD RG2 RG1
2
STR RG2 RG0
2
LOD RG2 RG1
>FLG_OFFSET
STR RG2 RG0
>FLG_OFFSET
STR RG3 RG0
3
STR RG4 RG0
4
STR RG5 RG0
5
STR RG6 RG0
6
STR RG7 RG0
7
STR SP RG0
>SP_OFFSET
STR EPC RG0
>EPC_OFFSET
JMP
>Dispatcher
#ResumeProc
LDI RG0
>TState
LOD SP RG0
>SP_OFFSET
LOD FLG RG0
>FLG_OFFSET
LOD RG7 RG0
7
LOD RG6 RG0
6
LOD RG5 RG0
5
LOD RG4 RG0
4
LOD RG3 RG0
3
LOD RG2 RG0
2
LOD RG1 RG0
1
LOD RG0 RG0
0
RSM
#ExHandler
STR RG0 RG0
>TState
LDI RG0
>TState
STR RG1 RG0
1
STR RG2 RG0
2
STR FLG RG0
>FLG_OFFSET
LDI RG0
>EXC_MASK
ALU AND RG0 FLG
ALI SRB RG0 >EXC_SHIFT
CMI RG0 >EXC_CTDZ
JEQ
>BurstOver
CMI RG0 >EXC_PRIV
JEQ
>TerminateCurrent
CMI RG0 >EXC_OOB
JEQ
>TerminateCurrent
LDI RG0
>TState
STR RG3 RG0
3
STR RG4 RG0
4
STR RG5 RG0
5
STR RG6 RG0
6
STR RG7 RG0
7
STR SP RG0
>SP_OFFSET
ZRO SP
LDI RG0
>EXC_MASK
ALU AND RG0 FLG
ALI SRB RG0 >EXC_SHIFT
CMI RG0 >EXC_SYS
JEQ
>SysSpawnProg
LDI RG0
>UNKNOWN_EXC_ERROR
JMP
>StatusHalt
#TerminateCurrent
HLT
0xF000
ZRO RG0
LOD RG0 RG0
>CurrentProcID
NUL RG1
LDI RA
>Dispatcher
JMP
>Terminate
#Terminate
PSH 1
STR RA SP
0
MOV RG2 RG0
ALI MUL RG2 >PROC_WORDS
LOD RG3 RG2
>ProcList
PAS RG1
JIF NEZ
>Ter.Start
LDI RG4
>SIB_MASK
ALF AND RG4 RG3
JIF EQZ
>Ter.Start
PSH 2
STR RG2 SP
0
STR RG3 SP
1
ALI SRB RG4 >SIB_SHIFT
MOV RG0 RG4
CAL
>Terminate
LOD RG2 SP
0
LOD RG3 SP
1
POP 2
#Ter.Start
PAS RG1
JIF EQZ
>Ter.NotStart
CAL
>RemoveChild
#Ter.NotStart
LDI RG4
>CHILD_MASK
ALF AND RG4 RG3
JIF EQZ
>Ter.NoChild
PSH 2
STR RG2 SP
0
STR RG3 SP
1
MOV RG0 RG4
NUL RG1
CAL
>Terminate
LOD RG2 SP
0
LOD RG3 SP
1
POP 2
#Ter.NoChild
ALI UST RG3 >PROC_ACTIVE_BIT
STR RG3 RG2
>ProcList
ALI DIV RG2 >PROC_WORDS
ALI MUL RG2 >STATE_REG_COUNT
ALI ADD RG2 >HLB_OFFSET
LOD RG0 RG2
>StateList
LDI RG3
>CHUNK_SIZE
MOV RG1 RG0
ALU DIV RG1 RG3
LDI RG2
>LO_MASK
ALU AND RG0 RG2
ALI SLB RG0 >LO_SHIFT
ALU DIV RG0 RG3
CAL
>UnmarkBits
ZRO RG0
LOD RG0 RG0
>ProcCount
DEC RG0
STR RG0 RG0
>ProcCount
LOD RA SP
0
POP 1
RET
#SysSpawnProg
ZRO RG1
LOD RG1 RG1
>ProcCount
LDI RG2
>MAX_PROC_COUNT
CMP RG1 RG2
JGE
>SSP.MaxError
ZRO RG0
LOD RG0 RG0
>CurrentProcID
LDI RG1
>STATE_REG_COUNT
ALU MUL RG1 RG0
LDI RG2
>StateList
ALU ADD RG1 RG2
LOD RG2 RG1
>FLG_OFFSET
LDI RG3
>IOP_GROUP_MASK
ALU AND RG3 RG2
ALI SRB RG3 >IOP_GROUP_SHIFT
CMI RG3 >DRIVE_IOP_GROUP
JNE
>SSP.FLGError
JIF EQZ
>SSP.PrivError
MOV FLG RG2
CAL
>LoadProgram
AIN ADD OUT 1
JIF CAR
>SSP.MemError
LDI FLG
>USER_PROC_FLG
MOV RG0 OUT
CAL
>MakeChildThread
LDI OUT
>SYS_SPAWN_PROG_GOOD
JMP
>SSP.Finalize
#SSP.MaxError
LDI OUT
>SYS_SPAWN_PROG_MAX
JMP
>SSP.Finalize
#SSP.PrivError
LDI OUT
>SYS_SPAWN_PROG_PRIV
JMP
>SSP.Finalize
#SSP.MemError
LDI OUT
>SYS_SPAWN_PROG_MEM
JMP
>SSP.Finalize
#SSP.FLGError
LDI OUT
>SYS_SPAWN_PROG_FLG
#SSP.Finalize
LDI RG0
>TState
STR OUT RG0
6
JMP
>ResumeProc
#MakeChildThread
PSH 2
STR RA SP
0
STR FLG SP
1
NUL RG1
#MCT.Search
INC RG1
MOV RG2 RG1
ALI MUL RG2 >PROC_WORDS
LOD RG3 RG2
>ProcList
AIN SET RG3 >PROC_ACTIVE_BIT
JIF CAR
>MCT.Search
ZRO RG3
ALI SET RG3 >PROC_ACTIVE_BIT
STR RG3 RG2
>ProcList
ZRO RG2
LOD RG2 RG2
>ProcCount
INC RG2
STR RG2 RG2
>ProcCount
MOV RG2 RG1
ALI MUL RG2 >STATE_REG_COUNT
LDI RG3
>StateList
ALU ADD RG2 RG3
ZRO RG3
STR RG3 RG2
0
STR RG3 RG2
1
STR RG3 RG2
2
STR RG3 RG2
3
STR RG3 RG2
4
STR RG3 RG2
5
STR RG3 RG2
6
STR RG3 RG2
7
STR RG3 RG2
>EPC_OFFSET
STR RG3 RG2
>SP_OFFSET
LOD RG3 SP
1
STR RG3 RG2
>FLG_OFFSET
STR RG0 RG2
>HLB_OFFSET
MOV RG0 RG1
MOV OUT RG0
LOD RA SP
0
POP 2
JMP
>InsertChild
#LoadProgram
PSH 1
STR RA SP
0
MOV RG0 IO
LDI RG1
>CHUNK_SIZE
ALU DIV RG0 RG1
ALI ADD RG0 2
CAL
>FindOpenMemory
AIN ADD OUT 1
JIF CAR
>LoP.Error
MOV RG1 RG0
MOV RG0 OUT
LDI RG2
>CHUNK_SIZE
ALU MUL OUT RG2
ALI SRB OUT >LO_SHIFT
MOV RG3 RG1
ALU MUL RG3 RG2
ALU OR OUT RG3
CAL
>MarkBits
MOV RG1 RG0
ZRO RG0
LDI RG2
>CHUNK_SIZE
ALU MUL RG1 RG2
LOD RA SP
0
POP 1
JMP
>LoadFile
#LoP.Error
NUL OUT
LOD RA SP
0
POP 1
RET
#InsertChild
PAS RG0
JIF EQZ
>InC.Skip
MOV RG1 RG0
ALI MUL RG1 >PROC_WORDS
LOD RG2 RG1
>ProcList
LDI RG3
>SIB_MASK
ALU NOT RG3 RG3
ALU AND RG2 RG3
LDI RG3
>PARENT_MASK
ALU NOT RG3 RG3
ALU AND RG2 RG3
ZRO RG3
LOD RG3 RG3
>CurrentProcID
MOV RG4 RG3
ALI SLB RG4 >PARENT_SHIFT
ALU OR RG2 RG4
STR RG2 RG1
>ProcList
ALI MUL RG3 >PROC_WORDS
LOD RG2 RG3
>ProcList
LDI RG1
>CHILD_MASK
ALF AND RG1 RG2
JIF NEZ
>InC.FindLastSib
ALU OR RG2 RG0
STR RG2 RG3
>ProcList
RET
#InC.FindLastSib
ALI MUL RG1 >PROC_WORDS
LOD RG2 RG1
>ProcList
LDI RG3
>SIB_MASK
ALF AND RG3 RG2
JIF EQZ
>InC.FoundLast
ALI SRB RG3 >SIB_SHIFT
MOV RG1 RG3
JMP
>InC.FindLastSib
#InC.FoundLast
ALU OR RG2 RG0
STR RG2 RG1
>ProcList
#InC.Skip
RET
#RemoveChild
PAS RG0
JIF EQZ
>ReC.Done
MOV RG1 RG0
ALI MUL RG1 >PROC_WORDS
LOD RG1 RG1
>ProcList
LDI RG2
>PARENT_MASK
ALU AND RG2 RG1
ALI SRB RG2 >PARENT_SHIFT
ALI MUL RG2 >PROC_WORDS
LOD RG3 RG2
>ProcList
LDI RG4
>CHILD_MASK
ALU AND RG4 RG3
CMP RG4 RG0
JNE
>ReC.IsSibling
LDI RG4
>CHILD_MASK
ALU NOT RG4 RG4
ALU AND RG3 RG4
LDI RG4
>SIB_MASK
ALU AND RG4 RG1
ALI SRB RG4 >SIB_SHIFT
ALU OR RG3 RG4
STR RG3 RG2
>ProcList
RET
#ReC.IsSibling
LDI RG2
>CHILD_MASK
#ReC.SibLoop
ALU AND RG2 RG3
ALI MUL RG2 >PROC_WORDS
LOD RG3 RG2
>ProcList
LDI RG4
>SIB_MASK
ALU AND RG4 RG3
ALI SRB RG4 >SIB_SHIFT
CMP RG4 RG0
JEQ
>ReC.FoundSib
MOV RG2 RG4
JMP
>ReC.SibLoop
#ReC.FoundSib
LDI RG4
>SIB_MASK
ALU AND RG1 RG4
ALI SRB RG1 >SIB_SHIFT
ALU NOT RG4 RG4
ALU AND RG3 RG4
ALU OR RG3 RG1
STR RG3 RG2
>ProcList
#ReC.Done
RET
#LoadFile
ALI SET FLG >DRIVE_PTR_BIT
MOV IO RG0
ALI UST FLG >DRIVE_PTR_BIT
MOV RG0 IO
PAS RG0
JIF EQZ
>LoF.Done
#LoF.LoadLoop
STR IO RG1
0
INC RG1
DEC RG0
JIF NEZ
>LoF.LoadLoop
#LoF.Done
RET
#FindOpenMemory
ZRO RG1
LOD RG3 RG1
>MallocBMPs
LDI RG4
>WORD_SIZE
#FOM.Loop
MOV RG5 RG1
ALU MOD RG5 RG4
AFN SET RG3 RG5
JIF CAR
>FOM.Not0
LDI RG2
1
MOV RG5 RG1
ALU ADD RG5 RG2
#FOM.InLoop
CMP RG2 RG0
JEQ
>FOM.Success
AFN MOD RG5 RG4
JIF NEZ
>FOM.SameWord
MOV RG6 RG5
ALU DIV RG6 RG4
ALI MOD RG6 >BMP_WORDS
LOD RG3 RG6
>MallocBMPs
#FOM.SameWord
MOV RG6 RG5
ALU MOD RG6 RG4
AFN SET RG3 RG6
JIF CAR
>FOM.Hit1
INC RG5
INC RG2
JMP
>FOM.InLoop
#FOM.Hit1
MOV RG1 RG5
#FOM.Not0
INC RG1
LDI RG5
>NUM_CHUNKS
CMP RG5 RG1
JLT
>FOM.NoSpace
AFN MOD RG1 RG4
JIF NEZ
>FOM.Loop
MOV RG5 RG1
ALU DIV RG5 RG4
LOD RG3 RG5
>MallocBMPs
JMP
>FOM.Loop
#FOM.Success
MOV OUT RG1
RET
#FOM.NoSpace
NUL OUT
RET
#MarkBits
ZRO RG2
LOD RG2 RG2
>MarkInst
STR RG2 RG2
>MoB.ModBit
JMP
>ModifyBits
#UnmarkBits
ZRO RG2
LOD RG2 RG2
>UnmarkInst
STR RG2 RG2
>MoB.ModBit
JMP
>ModifyBits
#ModifyBits
LDI RG2
>WORD_SIZE
MOV RG3 RG0
ALU DIV RG3 RG2
LOD RG5 RG3
>MallocBMPs
MOV RG4 RG0
ALU MOD RG4 RG2
#MoB.Loop
#MoB.ModBit
NOP
INC RG4
DEC RG1
JIF EQZ
>MoB.Done
ALF MOD RG4 RG2
JIF NEZ
>MoB.Loop
STR RG5 RG3
>MallocBMPs
INC RG3
ALI MOD RG3 >BMP_WORDS
LOD RG5 RG3
>MallocBMPs
JMP
>MoB.Loop
#MoB.Done
STR RG5 RG3
>MallocBMPs
RET
#OSEndPoint
