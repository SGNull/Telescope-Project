The only main differences between this computing system and the standard processor is its ability to boot from a boot drive, and its I/O. The boot functionality will be inherited from the boot computer. The I/O is what really distinguishes the computer from the CPU



I/O devices:
split into 8 groups of 4.

0 - Drives (1-word x 1-word)
1 - Drive Pointers  (^^^^^^)
2 - Terminal(writing)/Keyboard(reading)
3 - GPIO
4 - TNET (1-word, 2-way buffer)
5 - unused (network in the future)
6 - unused (future internal chip expansion) (kernel only)
7 - Immutable (kernel only)


Writing/Reading a drive increments the corresponding drive pointer.

All 0th devices (drive, drive pointer, keyboard, terminal, TNET, GPIO, and network in the future) are kernel only


Immutable devices:
1C Cycles counter (read lower word) / Start counter (write)
1D Cycles counter (read upper word) / Stop counter (write)
1E Random number generator (read) / PC status code register (write)
1F External boot (unusable by any program)


TNET Description:
writeIN  if inbound full
readOUT  if inbound empty
readIN   if outbound empty
writeOUT if outbound full

reading TNET empties the corresponding buffer, and writing to TNET overwrites the corresponding buffer

TNET has an extra bit in both the outbound and inbound buses in the highest position (-1 for clock).
The outbound one is always on.
If the inbound one is on, the inbound buffer is bypassed, ie. inbound becomes equivalent to GPIO input.
This lets 2 computers connect together and talk via a single 1-word 2-way buffer using just their outbounds.



To minimize the amount of physical space on the chip each I/O takes up, the following format will be adopted:

Output Bus:
Bits 0-X: Data output
Bits X-Y: Other output information (flags, etc.)
Bit Y+1: Clock

Input Bus:
Bits 0-X: Data input
Bits X-Z: Other input information (flags, etc.)



Interrupts:
0 - TICK: interrupt occurs once every 2^16 cycles using computer's cycle counter
1 - PAUS: ctrl+alt+del, but for TBOS. Brings the user to some kind of UI
2 - PVIO: non-maskable, user program attempted to read/write privileged I/O device.
3 - STOP: non-maskable, stop computer right where it is. Like pause, but at the OS level.



When the computer's status code register is written to for the first time, it will pause the simulation.