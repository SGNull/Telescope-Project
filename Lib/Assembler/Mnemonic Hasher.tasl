(/ Mnemonic Hasher Description:
/ Contains the mnemonic hashing function for assemblers.
/ The MnemonicHasher function uses the following registers:
/ RG0-RG2: 3 Character Input
/ RG6: Output value
/ RG7: Return address

/ When ran as a standalone file, accepts text input on IOP 0.
/ Once 3 characters have been entered, the hash is outputted.
/ Note that this does not output text.
)

@BOT5BITMASK h001F

(#MnemonicHasher.Main
	/ The function that runs if you run Mnemonic Hasher as a program.
	/ Waits for IO, 
	#MnemHash.IO0
	JIF PNW >MnemHash.IO0
	MOV RG0 IO
	
	#MnemHash.IO1
	JIF PNW >MnemHash.IO1
	MOV RG1 IO
	
	#MnemHash.IO2
	JIF PNW >MnemHash.IO2
	MOV RG2 IO
	
	LDI RG7 >MnemHash.MHRet
	JIF TRU >MnemonicHasher
	#MnemHash.MHRet
	
	MOV IO RG6
	
	JIF TRU >MnemHash.IO0
)

(#MnemonicHasher
	/ Push to the stack.
	AIF SUB SP h2
	STR RG3 SP d0
	STR RG4 SP d1
	
	/ Set up RG6 as the output accumulator, and RG4 as the mask
	AIF AND RG6 h0
	LDI RG4 >BOT5BITMASK

	/ Mask and shift the three inputs, using RG3 as a buffer.
	/ Select bit 5 from the last char.
	/ Bit 5 is on if the character is a number (or lowercase/special char).
	MOV RG3 RG0
	ALF AND RG3 RG4
	ALF OR RG6 RG3
	
	MOV RG3 RG1
	ALF AND RG3 RG4
	AIF SLB RG3 d5
	ALF OR RG6 RG3
	
	MOV RG3 RG2
	ALF AND RG3 RG4
	AIF SLB RG3 hA
	ALF OR RG6 RG3
	
	MOV RG3 RG2
	AIF SEL RG3 h5
	AIF SLB RG3 hF
	ALF OR RG6 RG3

	/ Pop from stack & return.
	LOD RG4 SP d1
	LOD RG3 SP d0
	AIF ADD SP h2
	
	MOV PC RG7
)
